///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../Grammar/Inflection.hpp"
#include <QtNetwork/QNetworkCookie>
#include <iostream>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Main Event Loop //////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * This function provides our main event loop functionality
 * @name ::main()
 * @param int argCount
 * @param char** argArray
 * @return int
 */
int main(int argCount, char* argArray[]) {
	// Load the model
//	ExampleModel* modExample = new ExampleModel(1);
	// Debug the response
	std::cout << Crux::Grammar::Inflection::singularize("lives").toLatin1().data() << std::endl;
	// We're done, return the application execution
	return 0;
}
